//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Postivo.Models.Components
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Linq;
    using Postivo.Models.Components;
    using Postivo.Utils;
    using System;
    using System.Collections.Generic;
    using System.Numerics;
    using System.Reflection;

    public class Recipients1Type
    {
        private Recipients1Type(string value) { Value = value; }

        public string Value { get; private set; }

        public static Recipients1Type RecipientInline { get { return new Recipients1Type("RecipientInline"); } }

        public static Recipients1Type RecipientFromAddressBook { get { return new Recipients1Type("RecipientFromAddressBook"); } }

        public static Recipients1Type RecipientFromAddressBookByExternalId { get { return new Recipients1Type("RecipientFromAddressBookByExternalId"); } }

        public override string ToString() { return Value; }
        public static implicit operator String(Recipients1Type v) { return v.Value; }
        public static Recipients1Type FromString(string v) {
            switch(v) {
                case "RecipientInline": return RecipientInline;
                case "RecipientFromAddressBook": return RecipientFromAddressBook;
                case "RecipientFromAddressBookByExternalId": return RecipientFromAddressBookByExternalId;
                default: throw new ArgumentException("Invalid value for Recipients1Type");
            }
        }
        public override bool Equals(object? obj)
        {
            if (obj == null || GetType() != obj.GetType())
            {
                return false;
            }
            return Value.Equals(((Recipients1Type)obj).Value);
        }

        public override int GetHashCode()
        {
            return Value.GetHashCode();
        }
    }


    [JsonConverter(typeof(Recipients1.Recipients1Converter))]
    public class Recipients1
    {
        public Recipients1(Recipients1Type type)
        {
            Type = type;
        }

        [SpeakeasyMetadata("form:explode=true")]
        public RecipientInline? RecipientInline { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public RecipientFromAddressBook? RecipientFromAddressBook { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public RecipientFromAddressBookByExternalId? RecipientFromAddressBookByExternalId { get; set; }

        public Recipients1Type Type { get; set; }
        public static Recipients1 CreateRecipientInline(RecipientInline recipientInline)
        {
            Recipients1Type typ = Recipients1Type.RecipientInline;

            Recipients1 res = new Recipients1(typ);
            res.RecipientInline = recipientInline;
            return res;
        }
        public static Recipients1 CreateRecipientFromAddressBook(RecipientFromAddressBook recipientFromAddressBook)
        {
            Recipients1Type typ = Recipients1Type.RecipientFromAddressBook;

            Recipients1 res = new Recipients1(typ);
            res.RecipientFromAddressBook = recipientFromAddressBook;
            return res;
        }
        public static Recipients1 CreateRecipientFromAddressBookByExternalId(RecipientFromAddressBookByExternalId recipientFromAddressBookByExternalID)
        {
            Recipients1Type typ = Recipients1Type.RecipientFromAddressBookByExternalId;

            Recipients1 res = new Recipients1(typ);
            res.RecipientFromAddressBookByExternalId = recipientFromAddressBookByExternalID;
            return res;
        }

        public class Recipients1Converter : JsonConverter
        {
            public override bool CanConvert(System.Type objectType) => objectType == typeof(Recipients1);

            public override bool CanRead => true;

            public override object? ReadJson(JsonReader reader, System.Type objectType, object? existingValue, JsonSerializer serializer)
            {
                if (reader.TokenType == JsonToken.Null)
                {
                    throw new InvalidOperationException("Received unexpected null JSON value");
                }

                var json = JRaw.Create(reader).ToString();
                var fallbackCandidates = new List<(System.Type, object, string)>();

                try
                {
                    return new Recipients1(Recipients1Type.RecipientFromAddressBook)
                    {
                        RecipientFromAddressBook = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<RecipientFromAddressBook>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(RecipientFromAddressBook), new Recipients1(Recipients1Type.RecipientFromAddressBook), "RecipientFromAddressBook"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                try
                {
                    return new Recipients1(Recipients1Type.RecipientFromAddressBookByExternalId)
                    {
                        RecipientFromAddressBookByExternalId = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<RecipientFromAddressBookByExternalId>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(RecipientFromAddressBookByExternalId), new Recipients1(Recipients1Type.RecipientFromAddressBookByExternalId), "RecipientFromAddressBookByExternalId"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                try
                {
                    return new Recipients1(Recipients1Type.RecipientInline)
                    {
                        RecipientInline = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<RecipientInline>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(RecipientInline), new Recipients1(Recipients1Type.RecipientInline), "RecipientInline"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                if (fallbackCandidates.Count > 0)
                {
                    fallbackCandidates.Sort((a, b) => ResponseBodyDeserializer.CompareFallbackCandidates(a.Item1, b.Item1, json));
                    foreach(var (deserializationType, returnObject, propertyName) in fallbackCandidates)
                    {
                        try
                        {
                            return ResponseBodyDeserializer.DeserializeUndiscriminatedUnionFallback(deserializationType, returnObject, propertyName, json);
                        }
                        catch (ResponseBodyDeserializer.DeserializationException)
                        {
                            // try next fallback option
                        }
                        catch (Exception)
                        {
                            throw;
                        }
                    }
                }

                throw new InvalidOperationException("Could not deserialize into any supported types.");
            }

            public override void WriteJson(JsonWriter writer, object? value, JsonSerializer serializer)
            {
                if (value == null)
                {
                    throw new InvalidOperationException("Unexpected null JSON value.");
                }

                Recipients1 res = (Recipients1)value;

                if (res.RecipientInline != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.RecipientInline));
                    return;
                }

                if (res.RecipientFromAddressBook != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.RecipientFromAddressBook));
                    return;
                }

                if (res.RecipientFromAddressBookByExternalId != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.RecipientFromAddressBookByExternalId));
                    return;
                }
            }

        }

    }
}